@page "/recipes"
@using TheStockedKitchen.Client;
@using TheStockedKitchen.Web.Shared.Components;

@inject ITheStockedKitchenClient _apiClient

<PageHeader Title="Recipes">
    @if (ShowRecipeDetail)
    {
        <MudItem xs="1">
            <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.ArrowBack" OnClick="HideShowRecipeDetail" />
        </MudItem>
    }
</PageHeader>

@if (Loading)
{
    <LoadingSpinner />
}
else if (ShowError)
{
    <SadToastyError />
}
else
{
    @if(ShowRecipeDetail)
    {
        <RecipeDetail RecipeVM="SelectedRecipeVM" FoodStocks="FoodStocks" />
    }
    else
    {
        <RecipeSearch ViewRecipeEvent="OpenRecipeDetail" FoodStocks="FoodStocks" />
    }
}

@code {
    private List<FoodStock> FoodStocks { get; set; } = new List<FoodStock>();
    private RecipeVM SelectedRecipeVM { get; set; } = new RecipeVM();
    
    private bool ShowRecipeDetail { get; set; } = false;
    private bool Loading { get; set; }
    private bool ShowError { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        Loading = true;

        try
        {
            FoodStocks = (await _apiClient.GetFoodStockAsync()).ToList();
        }
        catch(Exception)
        {
            ShowError = true;
            Loading = false;
        }

        Loading = false;
    }

    private void OpenRecipeDetail(RecipeVM recipeVM)
    {
        SelectedRecipeVM = recipeVM;
        ShowRecipeDetail = true;
    }

    private void HideShowRecipeDetail()
    {
        ShowRecipeDetail = false;
    }
}