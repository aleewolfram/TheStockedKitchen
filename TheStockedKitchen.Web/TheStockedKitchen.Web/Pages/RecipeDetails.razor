@page "/recipedetails/{RecipeId:int}"
@using TheStockedKitchen.Client;
@using TheStockedKitchen.Web.Shared.Components;

@inject ITheStockedKitchenClient _apiClient

@if (Loading)
{
    <LoadingSpinner />
}
else
{
    <MudGrid>
        <MudItem xs="12">
            <MudText Class="site-logo-text site-title-large" Typo="Typo.overline" Align="Align.Center" Color="Color.Primary">Recipes</MudText>
        </MudItem>
        <MudItem xs="12">
            <MudPaper Class="pa-6 ma-2" Elevation="3">
                <MudGrid>
                    <MudItem xs="12" md="6" Class="d-flex justify-center align-center">
                        <MudImage ObjectFit="ObjectFit.Cover" Fluid="true" Src="@RecipeDetailVM.Image" Elevation="25" Class="rounded-lg" />
                    </MudItem>
                    <MudItem xs="12" md="6">
                        </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>
    </MudGrid>
}

@code {
    [Parameter]
    public int RecipeId { get; set; }

    private RecipeDetailVM RecipeDetailVM { get; set; } = new RecipeDetailVM();
    private bool Loading { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Loading = true;

        RecipeDetailVM = await _apiClient.GetRecipeDetailAsync(RecipeId);

        Loading = false;
    }
}